#!/usr/bin/env tclsh

proc startefdwriters { subsys } { 
global EFD_WORK_DIR
   foreach s $subsys {
      if { [file exists $EFD_WORK_DIR/bin/sacpp_[set s]_telemetry_efdwriter] == 0 } {
         puts sdout "ERROR : No telemetry writer available for $s"
         exit
      }
      if { [file exists $EFD_WORK_DIR/bin/sacpp_[set s]_command_efdwriter] == 0 } {
         puts sdout "ERROR : No command writer available for $s"
         exit
      }
      if { [file exists $EFD_WORK_DIR/bin/sacpp_[set s]_telemetry_efdwriter] == 0 } {
         puts sdout "ERROR : No event writer available for $s"
         exit
      }
      set tid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_telemetry_efdwriter >& efd_[set s]_telemetry_[clock seconds].log &]
      set cid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_command_efdwriter >& efd_[set s]_command_[clock seconds].log &]
      set eid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_event_efdwriter >& efd_[set s]_event_[clock seconds].log &]
   }
   while { 1 } {
     foreach s $subsys {
       set bad [catch {exec ps -F --pid $tid($s)} res]
       if { $bad } {
          set tid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_telemetry_efdwriter >& efd_[set s]_telemetry_[clock seconds].log &]
       }
       set bad [catch {exec ps -F --pid $cid($s)} res]
       if { $bad } {
          set cid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_command_efdwriter >& efd_[set s]_command_[clock seconds].log &]
       }
       set bad [catch {exec ps -F --pid $eid($s)} res]
       if { $bad } {
          set eid($s) [exec $EFD_WORK_DIR/bin/sacpp_[set s]_event_efdwriter >& efd_[set s]_event_[clock seconds].log &]
       }
     }
   }
}

set SAL_DIR $env(SAL_DIR)
set EFD_WORK_DIR $env(EFD_WORK_DIR)

#source $SAL_DIR/add_system_dictionary.tcl
#source $SAL_DIR/revCodes.tcl
#source $EFD_WORK_DIR/.salwork/revCodes.tcl
#source $SAL_DIR/managetypes.tcl

startefdwriters $argv


