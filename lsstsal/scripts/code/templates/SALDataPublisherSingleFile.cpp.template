
/*
 * This file contains the implementation for the 'SALNAMESTRINGPublisher' executable.
 *
 ***/

#include <string>
#include <sstream>
#include <iostream>
#include "SAL_SALData.h"
#include "ccpp_sal_SALData.h"
#include "os.h"
#include <stdlib.h>

#include "example_main.h"

using namespace DDS;
using namespace SALData;

/* entry point exported and demangled so symbol can be found in shared library */
extern "C"
{
  OS_API_EXPORT
  int SALTelemetryPublisher(int argc, char *argv[]);
}

int SALTelemetryPublisher()
{
  // Publish Events
  //create Topic
#ifdef SAL_SUBSYSTEM_ID_IS_KEYED
  int SALDataID = 1;
  if (getenv("LSST_SALData_ID") != NULL) {
     sscanf(getenv("LSST_SALData_ID"),"%d",&SALDataID);
  } 
  SAL_SALData mgr = SAL_SALData(SALDataID);
#else
  SAL_SALData mgr = SAL_SALData();
#endif


  os_time delay_1s = { 1, 0 };
  SALNAMESTRINGC myData;
  long iseq;

  mgr.salTelemetryPub(topic_name);
  iseq = 1;
  while (iseq < 10) {
// INSERT_SAL_PUBC
    iseq++;
    mgr.putSample_SALTopic(&myData);
    os_nanoSleep(delay_1s);
  }

  /* Remove the DataWriters etc */
  mgr.salShutdown();

  return 0;
}


int OSPL_MAIN (int argc, char *argv[])
{
  return SALTelemetryPublisher ("SALNAMESTRING");
}
