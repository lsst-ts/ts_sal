//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: sal_dome.h
//  Source: sal_dome.idl
//  Generated: Thu Aug 23 17:17:00 2018
//  OpenSplice V6.4.140320OSS
//  
//******************************************************************
#ifndef _SAL_DOME_H_
#define _SAL_DOME_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"


namespace dome
{
   struct Summary;
   struct command_CloseShutter;
   struct command_Crawl;
   struct command_Move;
   struct command_OpenShutter;
   struct command_Park;
   struct command_SetLouvers;
   struct command_StopShutter;
   struct logevent_StateChanged;
   struct command;
   struct ackcmd;
   struct logevent;

   struct Summary
   {
         typedef DDS::Boolean _example_slice;
         typedef DDS::Boolean _example[16];
         typedef _example _example_out;
         static _example_slice * _example_alloc ();
         static void _example_free (_example_slice *);
         static void _example_copy (_example_slice* to, const _example_slice* from);
         static _example_slice *_example_dup (const _example_slice* from);

         struct _example_uniq_ {};
         typedef DDS_DCPS_FArray_var< _example, _example_slice, struct _example_uniq_> _example_var;
         typedef DDS_DCPS_Array_forany< _example, _example_slice, struct _example_uniq_> _example_forany;
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         _example example;
   };

   typedef DDS_DCPSStruct_var < Summary> Summary_var;
   typedef DDS_DCPSStruct_out < Summary> Summary_out;

   struct command_CloseShutter
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Boolean state;
   };

   typedef DDS_DCPSStruct_var < command_CloseShutter> command_CloseShutter_var;
   typedef DDS_DCPSStruct_out < command_CloseShutter> command_CloseShutter_out;

   struct command_Crawl
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Double azPosition;
         DDS::Double elPosition;
         DDS::Long demandTime;
   };

   typedef DDS_DCPSStruct_var < command_Crawl> command_Crawl_var;
   typedef DDS_DCPSStruct_out < command_Crawl> command_Crawl_out;

   struct command_Move
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Double azimuth;
         DDS::Double elevation;
   };

   typedef DDS_DCPSStruct_var < command_Move> command_Move_var;
   typedef DDS_DCPSStruct_out < command_Move> command_Move_out;

   struct command_OpenShutter
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Boolean state;
   };

   typedef DDS_DCPSStruct_var < command_OpenShutter> command_OpenShutter_var;
   typedef DDS_DCPSStruct_out < command_OpenShutter> command_OpenShutter_out;

   struct command_Park
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Boolean state;
   };

   typedef DDS_DCPSStruct_var < command_Park> command_Park_var;
   typedef DDS_DCPSStruct_out < command_Park> command_Park_out;

   struct command_SetLouvers
   {
         typedef DDS::Long _position_slice;
         typedef DDS::Long _position[34];
         typedef _position _position_out;
         static _position_slice * _position_alloc ();
         static void _position_free (_position_slice *);
         static void _position_copy (_position_slice* to, const _position_slice* from);
         static _position_slice *_position_dup (const _position_slice* from);

         struct _position_uniq_ {};
         typedef DDS_DCPS_FArray_var< _position, _position_slice, struct _position_uniq_> _position_var;
         typedef DDS_DCPS_Array_forany< _position, _position_slice, struct _position_uniq_> _position_forany;
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         _position position;
   };

   typedef DDS_DCPSStruct_var < command_SetLouvers> command_SetLouvers_var;
   typedef DDS_DCPSStruct_out < command_SetLouvers> command_SetLouvers_out;

   struct command_StopShutter
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::Boolean state;
   };

   typedef DDS_DCPSStruct_var < command_StopShutter> command_StopShutter_var;
   typedef DDS_DCPSStruct_out < command_StopShutter> command_StopShutter_out;

   struct logevent_StateChanged
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_seqNum;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::Long newState;
         DDS::Long priority;
   };

   typedef DDS_DCPSStruct_var < logevent_StateChanged> logevent_StateChanged_var;
   typedef DDS_DCPSStruct_out < logevent_StateChanged> logevent_StateChanged_out;

   struct command
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::Long private_seqNum;
         DDS::String_mgr device;
         DDS::String_mgr property;
         DDS::String_mgr action;
         DDS::String_mgr itemValue;
         DDS::String_mgr modifiers;
   };

   typedef DDS_DCPSStruct_var < command> command_var;
   typedef DDS_DCPSStruct_out < command> command_out;

   struct ackcmd
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::Long private_seqNum;
         DDS::Long ack;
         DDS::Long error;
         DDS::String_mgr result;
   };

   typedef DDS_DCPSStruct_var < ackcmd> ackcmd_var;
   typedef DDS_DCPSStruct_out < ackcmd> ackcmd_out;

   struct logevent
   {
         DDS::String_mgr private_revCode;
         DDS::Double private_sndStamp;
         DDS::Double private_rcvStamp;
         DDS::Long private_origin;
         DDS::Long private_host;
         DDS::String_mgr message;
   };

   typedef DDS_DCPSStruct_var < logevent> logevent_var;
   typedef DDS_DCPSStruct_out < logevent> logevent_out;
}
template <>
dome::Summary::_example_slice* DDS_DCPS_ArrayHelper < dome::Summary::_example, dome::Summary::_example_slice, dome::Summary::_example_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < dome::Summary::_example, dome::Summary::_example_slice, dome::Summary::_example_uniq_>::copy (dome::Summary::_example_slice *to, const dome::Summary::_example_slice* from);
template <>
void DDS_DCPS_ArrayHelper < dome::Summary::_example, dome::Summary::_example_slice, dome::Summary::_example_uniq_>::free (dome::Summary::_example_slice *ptr);
template <>
dome::command_SetLouvers::_position_slice* DDS_DCPS_ArrayHelper < dome::command_SetLouvers::_position, dome::command_SetLouvers::_position_slice, dome::command_SetLouvers::_position_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < dome::command_SetLouvers::_position, dome::command_SetLouvers::_position_slice, dome::command_SetLouvers::_position_uniq_>::copy (dome::command_SetLouvers::_position_slice *to, const dome::command_SetLouvers::_position_slice* from);
template <>
void DDS_DCPS_ArrayHelper < dome::command_SetLouvers::_position, dome::command_SetLouvers::_position_slice, dome::command_SetLouvers::_position_uniq_>::free (dome::command_SetLouvers::_position_slice *ptr);




#endif 
