#!/usr/bin/wish
set SUBSYS [lindex $argv 0]
set SAL_WORK_DIR $env(SAL_WORK_DIR)
source $SAL_WORK_DIR/idl-templates/validated/[set SUBSYS]_cmddef.tcl
set my 0
wm geometry  . 400x400
wm title . "$SUBSYS command launcher"
foreach i [lsort $ALIASES] {
   set y 0
   if { [info exists CMDS($SUBSYS,$i,param)] } {
      toplevel .$i -bg gray -width 600 -height 400 -bg LightGray
      wm title .$i "$SUBSYS Command - $i"
      wm withdraw .$i
      set y 40
      label .$i.l -text "Parameters for $i"
      place .$i.l -x 20 -y 10
      foreach p  $CMDS($SUBSYS,$i,param) {
         set t [lindex $p 0]
         set name [lindex $p 1]
         label .$i.par$name -text "$name (type is $t)  : "
         entry .$i.val$name -width 10 -bg LightBlue -textvariable PARS([set i]_$name)
         place .$i.par$name -x 40 -y $y
         place .$i.val$name -x 240 -y $y
         incr y 30
      }
      wm geometry .$i 400x[expr $y+50]
      wm protocol .$i WM_DELETE_WINDOW "wm withdraw .$i"
      button .$i.doit -text "Execute command" -width 40 -command "runcommand $i" -bg green
      place .$i.doit -x 40 -y $y
      button .cmd$i -text "$i" -width 20 -command "wm deiconify .$i"
      place .cmd$i -x 10 -y $my
   } else {
     button .cmd$i -text "$i" -width 20 -command "runcommand $i"
     place .cmd$i -x 10 -y $my
   }
   label .timel$i -text "Timeout : "
   entry .timev$i -width 10 -bg LightBlue -textvariable TIMEOUT($i)
   incr my 5
   place .timel$i -x 220 -y $my
   place .timev$i -x 300 -y $my
   incr my 30
}
button .done -text "Exit commander" -width 44 -bg orange -command exit
place .done -x 10 -y $my
incr my 40
wm geometry . 400x$my

proc runcommand { alias } {
global CMDS SUBSYS PARS TIMEOUT SAL_WORK_DIR
   .cmd$alias configure -bg orange
   set cargs $CMDS($SUBSYS,$alias)
   set device   [lindex $cargs 0]
   set property [lindex $cargs 1]
   set action   [lindex $cargs 2]
   set value ""
   set ready 1
   set modifiers ""
   if { [info exists CMDS($SUBSYS,$alias,param)] } {
      .cmd$alias configure -bg orange
      foreach p  $CMDS($SUBSYS,$alias,param) {
         set name [lindex $p 1]
         set modifiers "$modifiers $name=$PARS([set alias]_[set name])"
         if { [string trim $PARS([set alias]_[set name]] == "" } {set ready 0}
      }
   }
   if { $ready } {
     catch {.cmd$alias configure -bg orange}
     exec gnome-terminal -e "$SAL_WORK_DIR/$SUBSYS/cpp/src/sacpp_[set SUBSYS]_cmd $TIMEOUT($alias) \"$device\" \"$property\" \"$action\" \"$value\" \"$modifiers\""
     .cmd$alias configure -bg green
   } else { 
     set it [tk_dialog .d "Missing parameter" "All parameters must have a value" {} -1 "OK"]
   } 
}

if { [lindex [exec ospl list] end] != "running" } {
   puts stdout "Starting OSPL daemon"
   exec ospl start
   exec sleep 5
}
puts stdout "Starting $SUBSYS controller simulation"
exec gnome-terminal -t "$SUBSYS controller simulator" -e $SAL_WORK_DIR/$SUBSYS/cpp/src/sacpp_[set SUBSYS]_ctrl 1 &


